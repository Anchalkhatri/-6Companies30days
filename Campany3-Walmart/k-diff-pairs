/*
  Given an array of integers nums and an integer k, return the number of unique k-diff pairs in the array.

  A k-diff pair is an integer pair (nums[i], nums[j]), where the following are true:

        0 <= i, j < nums.length
        i != j
        |nums[i] - nums[j]| == k

*/

//time complexity : O(n)
//space complexity : O(n)


class Solution {
public:
    int findPairs(vector<int>& nums, int k) {
         unordered_map<int,int> a;
        for(int i:nums)
            a[i]++;
        int ans=0;
        for(auto x:a)
        {
            if(k==0)
            {    
                if(x.second>1)
                ans++;
            }
             else if(a.find(x.first+k)!=a.end())
                ans++;
        }
        
        return ans;
    }
};
