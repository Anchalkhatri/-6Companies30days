/*
 Given two integer arrays arr1 and arr2, and the integer d, return the distance value between the two arrays.

The distance value is defined as the number of elements arr1[i] such that there is not any element arr2[j] where |arr1[i]-arr2[j]| <= d.
*/


//Time Complexity : O(N*M), N and M are size of arr1 and arr2
//Space Complexity : O(1)


class Solution {
public:
    bool isValid(vector<int> &arr2, int target, int d){
        int start=0;
        int end=arr2.size()-1;

        while(start<=end){
            int mid = start+(end-start)/2;
            if(abs(arr2[mid]-target)<=d)
                return false;
            else if(arr2[mid]>target)
                end = mid-1;
            else    
                start = mid+1; 
        }
        return true;
    }
    int findTheDistanceValue(vector<int>& arr1, vector<int>& arr2, int d) {
        sort(arr2.begin(),arr2.end());
        
        int cnt = 0;
        for(auto num: arr1)
            if(isValid(arr2,num,d))
                cnt++;

        return cnt;
    }
};
