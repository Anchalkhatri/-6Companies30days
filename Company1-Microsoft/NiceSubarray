/*
  Given an array of integers nums and an integer k. A continuous subarray is called nice if there are k odd numbers on it.

Return the number of nice sub-arrays.

*/
//time complexity : o(n)
//space complexity : o(n)
class Solution {
public:
    int numberOfSubarrays(vector<int>& nums, int k) {
       unordered_map<int,int> mpp;
       int cnt=0;
       int oddcnt=0;
       mpp[0]++;
       for(int i=0;i<nums.size();i++){
            if(nums[i]%2!=0){
               oddcnt++;
               
            }
            
            cnt+=mpp[oddcnt-k];
            mpp[oddcnt]++;

       }
       return cnt;
    }
};
