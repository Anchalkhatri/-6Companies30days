/*
  Given an unsorted array arr of positive integers. One number a from the set [1, 2,....,n] is missing and one number b occurs twice in the array. Find numbers a and b.

Note: The test cases are generated such that there always exists one missing and one repeating number within the range [1,n].
*/


//time complexity : O(n)
//space complexity : O(n)


class Solution {
    vector<int> findTwoElement(vector<int>& arr) {
        unordered_map<int,int> mp;
        vector<int> res;
        for(int num:arr){
            mp[num]++;
        }
        int n = arr.size();
        for(auto it:mp){
            if(it.second == 2){
                res.push_back(it.first);
                break;
            }
        }
        for(int i=1;i<=n;i++){
            if(mp.find(i) == mp.end()){
                res.push_back(i);
                break;
            }
        }
        return res;
    }
};
