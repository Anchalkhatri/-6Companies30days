//Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

//Time Complexity: ( O(n) ), where ( n ) is the length of the string. The string is traversed twice.
//Space Complexity: ( O(1) ), as the frequency array has a fixed size of 26.

class Solution {
public:
    int firstUniqChar(string s) {
        vector<int>freq(26,0);
        for(char c:s){
          freq[c-'a']++;
        }
        for(int i=0;i<s.size();i++){
           if(freq[s[i]-'a']==1){
               return i;
            }
        }
        return -1;
    }
};
